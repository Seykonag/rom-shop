create sequence bonus_score_seq start with 1 increment by 1;
create sequence bucket_seq start with 1 increment by 1;
create sequence category_seq start with 1 increment by 1;
create sequence comment_seq start with 1 increment by 1;
create sequence mark_seq start with 1 increment by 1;
create sequence order_details_seq start with 1 increment by 1;
create sequence order_seq start with 1 increment by 1;
create sequence product_seq start with 1 increment by 1;
create sequence sale_seq start with 1 increment by 1;
create sequence user_seq start with 1 increment by 1;
create table bonus_scores (sum numeric(38,2), id bigint not null, user_id bigint unique, primary key (id));
create table buckets (id bigint not null, user_id bigint unique, primary key (id));
create table buckets_products (bucket_id bigint not null, product_id bigint not null);
create table categories (id bigint not null, sale_id bigint unique, title varchar(255), primary key (id));
create table category_details (category_id bigint not null, detail_name varchar(255) not null, detail_value varchar(255), primary key (category_id, detail_name));
create table comment_advantages (comment_id bigint not null, advantages varchar(255));
create table comment_disadvantages (comment_id bigint not null, disadvantages varchar(255));
create table comments (rating integer not null, data_comment timestamp(6), id bigint not null, user_id bigint unique, answer_admin varchar(255), text varchar(255), primary key (id));
create table marks (id bigint not null, user_id bigint unique, primary key (id));
create table marks_products (mark_id bigint not null, product_id bigint not null);
create table orders (sum numeric(38,2), created timestamp(6), id bigint not null, updated timestamp(6), user_id bigint, address varchar(255), status varchar(255) check (status in ('NEW','APPROVED','CANCELED','PAID','CLOSED')), primary key (id));
create table orders_details (amount numeric(38,2), price numeric(38,2), details_id bigint not null unique, id bigint not null, order_id bigint, product_id bigint, primary key (id));
create table products (price numeric(38,2), stock boolean not null, id bigint not null, developer varchar(255), model varchar(255), photo oid, title varchar(255), primary key (id));
create table products_categories (category_id bigint not null, product_id bigint not null);
create table sales (percentage integer not null, sale integer not null, created timestamp(6), ended timestamp(6), id bigint not null, primary key (id));
create table users (archive boolean not null, newsletter boolean not null, bonus_score_id bigint unique, bucket_id bigint unique, id bigint not null, mark_id bigint unique, address varchar(255) not null, city varchar(255) not null, company varchar(255), country varchar(255) not null check (country in ('BELARUS','GEORGIA','KAZAKHSTAN','KYRGYZSTAN','RUSSIA','UZBEKISTAN','UKRAINE')), email varchar(255) not null, fax varchar(255), first_name varchar(255) not null, index varchar(255), last_name varchar(255) not null, password varchar(255) not null, phone varchar(255) not null, region varchar(255) not null check (region in ('BREST','VITEBSK','GOMEL','GRODNO','MINSK','MINSKIY','MOGILEV','ABKHAZIA','AJARIA','GURIA','IMERETI','KAKHETI','KVEMOKARTLI','MTSKHETAMTIANETI','RACHALECHKUMIANDKVEMOSVANET','SAMEGRELOZEMOSVANETI','SAMSKHEJAVAKHETI','SHIDAKARTLI','TBILISI','AKMOLINSKIY','AKTUBINSKIY','ALMATINSKIY','ALMATY','ASTANA','ATIRAYSKIY','BAIKONYR','ORIENTALKAZAKHSTAN','JAMBYLSKIY','WESTKAZAKHSTAN','KARAGANDINSKIY','KOSTANASKIY','KYZILORDINSKIY','MANGISTAYSKIY','PAVLODARSKIY','NORTHKAZAKHSTAN','SOUTHKAZAKHSTAN','BATKEN','BISHKEK','CHU','JALALABAD','NARYN','OSH','TALAS','YSYKKOL','BELGOROD','BRYANSK','VLADIMIR','VOLGOGRAD','VOLOGDA','VORONEZH','IVANOVO','IRKUTSK','KALININGRAD','KALUGA','KEMEROVO','KURGAN','KURSK','LENINGRAD','LIPETSK','MAGADAN','MOSCOW','MURMANSK','NIZHNYNOVGOROD','NOVGOROD','NOVOSIBIRSK','OMSK','ORENBURG','OREL','PENZA','PSKOV','ROSTOV','RYAZAN','SAMARA','SARATOV','SAKHALIN','SVERDLOVSK','SMOLYANINOVSKY','TAMBOV','TVER','TOMSK','TULA','TYUMEN','ULYANOVSK','CHELYABINSK','CHECHNYA','CHUVASHIA','CHUKOTKA','YAMALNENETS','YAROSLAVL','ANDIJON','BUXORO','FARGONA','JIZZAX','NAMANGAN','NAVOIY','QUASHDARIO','QORAQALPOGISTON','SAMARQAND','SIRDARYO','SURXONDARYO','TOSHKENT','TOSHENTSKIY','XORAZM','VINNYTSIA','VOLYN','DNIPROPETROVSK','DONETSK','ZHYTOMYR','ZAKARPATTIA','ZAPORIZHIA','IVANOFRANKIVSK','KYIVCITY','KYIV','KIROVOHRAD','LUGANSK','LVOV','MYKOLAIV','ODESSA','POLTAVA','RIVNE','SUMY','TERNOPIL','KHERSON','KHMELNYTSKY','CHERKASY','CHERNIVTSI','CHERNIHIV')), role varchar(255) not null check (role in ('ROLE_ADMIN','ROLE_USER','ROLE_MANAGER')), username varchar(255) not null, primary key (id));
alter table if exists bonus_scores add constraint bonus_scores_KF_user_id foreign key (user_id) references users;
alter table if exists buckets add constraint buckets_KF_user_id foreign key (user_id) references users;
alter table if exists buckets_products add constraint buckets_products_KF_product_id foreign key (product_id) references products;
alter table if exists buckets_products add constraint buckets_products_KF_bucket_id foreign key (bucket_id) references buckets;
alter table if exists categories add constraint categories_KF_sale_id foreign key (sale_id) references sales;
alter table if exists category_details add constraint category_details_KF_category_id foreign key (category_id) references categories;
alter table if exists comment_advantages add constraint comment_advantages_KF_comment_id foreign key (comment_id) references comments;
alter table if exists comment_disadvantages add constraint comment_disadvantages_KF_comment_id foreign key (comment_id) references comments;
alter table if exists comments add constraint comments_KF_user_id foreign key (user_id) references users;
alter table if exists marks add constraint marks_KF_user_id foreign key (user_id) references users;
alter table if exists marks_products add constraint marks_products_KF_produc_id foreign key (product_id) references products;
alter table if exists marks_products add constraint marks_products_KF_mark_id foreign key (mark_id) references marks;
alter table if exists orders add constraint orders_KF_user_id foreign key (user_id) references users;
alter table if exists orders_details add constraint order_details_KF_order_id foreign key (order_id) references orders;
alter table if exists orders_details add constraint order_details_KF_product_id foreign key (product_id) references products;
alter table if exists orders_details add constraint order_details_KF_details_id foreign key (details_id) references orders_details;
alter table if exists products_categories add constraint product_categories_KF_category_id foreign key (category_id) references categories;
alter table if exists products_categories add constraint product_categories_KF_product_id foreign key (product_id) references products;
alter table if exists users add constraint users_KF_bonus_score_id foreign key (bonus_score_id) references bonus_scores;
alter table if exists users add constraint users_KF_bucket_id foreign key (bucket_id) references buckets;
alter table if exists users add constraint
    users_KF_mark_id foreign key (mark_id) references marks;